ifeq ($(strip $(DEVKITARM)),)
$(error "Please set DEVKITARM in your environment. export DEVKITARM=<path to>devkitARM")
endif

include $(DEVKITARM)/gba_rules

PROJ = sap

SOURCES		:=	src sprites engine
CFILES		:=	$(foreach dir,$(SOURCES),$(wildcard $(dir)/*.c))
AUDIO       :=  audio
AUDIOFILES := $(foreach dir,$(SOURCES),$(wildcard $(dir)/*.wav))
BINFILES	:=	generated/soundbank.bin
OFILES := $(addsuffix .o,$(BINFILES)) $(CFILES:.c=.o)


INCLUDES = -I$(DEVKITPRO)/libtonc/include -I$(DEVKITPRO)/libgba/include
LIBS = -L$(DEVKITPRO)/libtonc/lib -L$(DEVKITPRO)/libgba/lib -ltonc -lmm

CFLAGS = -mthumb-interwork -mthumb -O2 -Wall -fno-strict-aliasing $(INCLUDES)
LDFLAGS = -mthumb-interwork -mthumb -specs=gba.specs

DEPENDS	:=	$(OFILES:.o=.d)

$(PROJ).gba: $(PROJ).elf
	$(OBJCOPY) -v -O binary $(PROJ).elf $(PROJ).gba
	gbafix $(PROJ).gba

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

$(PROJ).elf: $(OFILES)
	$(CC) $(LDFLAGS) $(OFILES) $(LIBS) -o $(PROJ).elf

#---------------------------------------------------------------------------------
# This rule links in binary data with the .bin extension
#---------------------------------------------------------------------------------
%.bin.o	:	%.bin
#---------------------------------------------------------------------------------
	@echo $(notdir $<)
	@$(bin2o)

#-------------------------------------------------------------
# rule for generating soundbank file from audio files
#-------------------------------------------------------------
soundbank.bin:	$(AUDIOFILES)
#-------------------------------------------------------------
	@mmutil $^ -ogenerated/soundbank.bin -hgenerated/soundbank.h

.PHONY: clean
clean:
	rm -f $(PROJ).elf
	rm -f $(OBJS)
	rm -f $(PROJ).gba

-include $(DEPENDS)